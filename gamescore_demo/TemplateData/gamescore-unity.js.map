{"version":3,"file":"gamescore-unity.js","mappings":"mBAAe,MAAMA,EACjBC,YAAYC,EAAIC,GACZC,KAAKF,GAAKA,EACVE,KAAKD,MAAQA,EAEbC,KAAKF,GAAGG,OAAOC,MAAMC,MAAK,KAGtBH,KAAKI,QAAQ,sBAQjBJ,KAAKF,GAAGG,OAAOI,GAAG,UAAU,IAAML,KAAKI,QAAQ,sBAC/CJ,KAAKF,GAAGG,OAAOI,GAAG,QAASC,IACvBN,KAAKI,QAAQE,EAAU,yBAA2B,0BAEtDN,KAAKF,GAAGG,OAAOI,GAAG,QAASC,IACvBN,KAAKI,QAAQE,EAAU,yBAA2B,0BAEtDN,KAAKF,GAAGG,OAAOI,GAAG,SAAUC,IACxBN,KAAKI,QAAQE,EAAU,0BAA4B,2BAEvDN,KAAKF,GAAGG,OAAOI,GAAG,eAAgBC,IAC9BN,KAAKI,QAAQE,EAAU,gCAAkC,iCAI7DN,KAAKF,GAAGS,YAAYF,GAAG,QAAQ,IAAML,KAAKI,QAAQ,yBAGlDJ,KAAKF,GAAGU,aAAaH,GAAG,QAAQ,IAAML,KAAKI,QAAQ,0BACnDJ,KAAKF,GAAGU,aAAaH,GAAG,SAAS,IAAML,KAAKI,QAAQ,2BAEpDJ,KAAKF,GAAGU,aAAaH,GAAG,UAAU,IAAML,KAAKI,QAAQ,4BACrDJ,KAAKF,GAAGU,aAAaH,GAAG,gBAAgB,IAAML,KAAKI,QAAQ,iCAG3DJ,KAAKF,GAAGW,iBAAiBJ,GAAG,QAAQ,IAAML,KAAKI,QAAQ,8BACvDJ,KAAKF,GAAGW,iBAAiBJ,GAAG,SAAS,IAAML,KAAKI,QAAQ,+BAGxDJ,KAAKF,GAAGY,WAAWL,GAAG,QAAQ,IAAML,KAAKI,QAAQ,wBACjDJ,KAAKF,GAAGY,WAAWL,GAAG,SAAS,IAAML,KAAKI,QAAQ,yBAClDJ,KAAKF,GAAGY,WAAWL,GAAG,UAAU,IAAML,KAAKI,QAAQ,0BAGnDJ,KAAKF,GAAGa,IAAIN,GAAG,SAAS,IAAML,KAAKI,QAAQ,kBAC3CJ,KAAKF,GAAGa,IAAIN,GAAG,SAAUC,GAAYN,KAAKI,QAAQ,eAAgBE,KAElEN,KAAKF,GAAGa,IAAIN,GAAG,oBAAoB,IAAML,KAAKI,QAAQ,4BACtDJ,KAAKF,GAAGa,IAAIN,GAAG,oBAAqBC,GAAYN,KAAKI,QAAQ,yBAA0BE,KAEvFN,KAAKF,GAAGa,IAAIN,GAAG,mBAAmB,IAAML,KAAKI,QAAQ,2BACrDJ,KAAKF,GAAGa,IAAIN,GAAG,mBAAoBC,GAAYN,KAAKI,QAAQ,wBAAyBE,KAErFN,KAAKF,GAAGa,IAAIN,GAAG,kBAAkB,IAAML,KAAKI,QAAQ,0BACpDJ,KAAKF,GAAGa,IAAIN,GAAG,kBAAmBC,GAAYN,KAAKI,QAAQ,uBAAwB,KACnFJ,KAAKF,GAAGa,IAAIN,GAAG,mBAAmB,IAAML,KAAKI,QAAQ,wBAAyBJ,KAAKY,mBAEnFZ,KAAKF,GAAGa,IAAIN,GAAG,gBAAgB,IAAML,KAAKI,QAAQ,wBAClDJ,KAAKF,GAAGa,IAAIN,GAAG,gBAAgB,IAAML,KAAKI,QAAQ,wBAClDJ,KAAKF,GAAGa,IAAIN,GAAG,kBAAkB,IAAML,KAAKI,QAAQ,0BACpDJ,KAAKF,GAAGa,IAAIN,GAAG,iBAAiB,IAAML,KAAKI,QAAQ,yBAGnDJ,KAAKF,GAAGe,QAAQR,GAAG,SAAUC,GAAYN,KAAKI,QAAQ,mBAAoBE,KAC1EN,KAAKF,GAAGe,QAAQR,GAAG,QAASC,GAAYN,KAAKI,QAAQ,kBAAmBE,KACxEN,KAAKF,GAAGe,QAAQR,GAAG,UAAWC,GAAYN,KAAKI,QAAQ,oBAAqBE,KAC5EN,KAAKF,GAAGe,QAAQR,GAAG,iBAAkBC,GAAYN,KAAKI,QAAQ,2BAA4BE,KAG1FN,KAAKF,GAAGO,GAAG,mBAAoBS,GAASd,KAAKI,QAAQ,qBAAsBU,KAC3Ed,KAAKF,GAAGO,GAAG,0BAA2BU,GAAOf,KAAKI,QAAQ,4BAA6BW,KACvFf,KAAKF,GAAGO,GAAG,iBAAiB,IAAML,KAAKI,QAAQ,sBAEnDA,QAAQY,KAAcC,GAElBjB,KAAKD,MAAMmB,YAAY,eAAgBF,EAAWhB,KAAKmB,WAAWF,IAGtEE,QAAQC,GACJ,cAAe,GACX,IAAK,UACD,OAAOC,OAAOD,GAElB,IAAK,SAGL,IAAK,SACD,OAAOA,EAEX,IAAK,SACD,OAAOE,KAAKC,UAAUH,GAK9B,OAFAI,QAAQC,IAAI,6CAA8CL,GAEnDA,EAGXM,WACI,OAAO1B,KAAKF,GAAG6B,SAEnBC,kBACI,OAAO5B,KAAKmB,QAAQnB,KAAKF,GAAG+B,iBAEhCC,eACI,OAAO9B,KAAKmB,QAAQnB,KAAKF,GAAGiC,SAASC,MAGzCC,WACI,OAAOjC,KAAKF,GAAGoC,IAAIC,MAEvBC,iBACI,OAAOpC,KAAKF,GAAGoC,IAAIG,YAEvBC,WACI,OAAOtC,KAAKF,GAAGoC,IAAIK,MAEvBC,SACI,OAAOxC,KAAKF,GAAGoC,IAAIO,IAGvBC,uBACI,OAAO1C,KAAKF,GAAGe,QAAQ8B,cAG3BC,cACI,OAAO5C,KAAKF,GAAGG,OAAO4C,GAG1BC,iBACI,OAAO9C,KAAKF,GAAGG,OAAO8C,MAE1BC,eAAeD,GACX/C,KAAKF,GAAGG,OAAO8C,MAAQE,OAAOF,GAElCG,eAAeH,GACX/C,KAAKF,GAAGG,OAAO8C,OAASE,OAAOF,GAGnCI,gBACI,OAAOnD,KAAKF,GAAGG,OAAOmD,KAE1BC,cAAcD,GACVpD,KAAKF,GAAGG,OAAOmD,KAAOA,EAG1BE,kBACI,OAAOtD,KAAKF,GAAGG,OAAOsD,OAE1BC,gBAAgBC,GACZzD,KAAKF,GAAGG,OAAOsD,OAASE,EAG5BC,UAAUC,GACN,OAAO3D,KAAKmB,QAAQnB,KAAKF,GAAGG,OAAO2D,IAAID,IAG3CE,UAAUF,EAAKvC,GACXpB,KAAKF,GAAGG,OAAO6D,IAAIH,EAAKvC,GAE5B2C,UAAUJ,EAAKvC,GACXpB,KAAKF,GAAGG,OAAO+D,IAAIL,EAAKV,OAAO7B,IAGnC6C,UAAUN,GACN,OAAO3D,KAAKmB,QAAQnB,KAAKF,GAAGG,OAAOiE,IAAIP,IAG3CQ,cAAcR,EAAKvC,GACfpB,KAAKF,GAAGG,OAAO6D,IAAIH,GAAMS,QAAQhD,IAErCiD,aAAaV,GACT3D,KAAKF,GAAGG,OAAOqE,OAAOX,GAG1BY,mBAAmBZ,GACf,OAAO3D,KAAKF,GAAGG,OAAOuE,aAAab,GAEvCc,0BAA0Bd,EAAKvC,GAC3B,OAAOpB,KAAKF,GAAGG,OAAOyE,oBAAoBf,EAAKvC,GAEnDuD,wBAAwBhB,EAAKiB,GACzB,MAAMC,EAAU7E,KAAKF,GAAGG,OAAO6E,SAASnB,GAAKoB,SAASH,GACtD,OAAOC,EAAUA,EAAQzD,MAAQ,GAErC4D,2BAA2BrB,EAAKvC,GAC5B,OAAOpB,KAAKF,GAAGG,OAAO6E,SAASnB,GAAKoB,SAASE,WAAWC,GAAMA,EAAE9D,QAAUA,IAG9E+D,cACInF,KAAKF,GAAGG,OAAOmF,QAEnBC,eACIrF,KAAKF,GAAGG,OAAOqF,SAEnBC,WAAWC,GAAW,GAClB,OAAOxF,KAAKF,GAAGG,OAAOwF,KAAK,CAAED,SAAUpB,QAAQoB,KAEnDE,aACI,OAAO1F,KAAKF,GAAGG,OAAO0F,OAE1BC,cACI,OAAO5F,KAAKF,GAAGG,OAAO4F,QAE1BC,oBACI,OAAO9F,KAAKF,GAAGG,OAAO8F,cAG1BC,gBAAgBC,EAASC,EAAOC,EAAOC,EAAQC,EAAeC,GAC1D,OAAOtG,KAAKF,GAAGS,YACVgG,KAAK,CACF1D,GAAI7C,KAAKF,GAAGG,OAAO4C,GACnBoD,QAASA,EACJO,MAAM,KACNC,KAAKC,GAAMA,EAAEC,SACbC,QAAQC,GAAMA,IACnBX,MAAAA,EACAC,MAAOlD,OAAOkD,GACdC,OAAAA,EACAC,cAAeA,EACVG,MAAM,KACNC,KAAKC,GAAMA,EAAEC,SACbC,QAAQC,GAAMA,IACnBP,cAAeA,EACVE,MAAM,KACNC,KAAKC,GAAMA,EAAEC,SACbC,QAAQC,GAAMA,MAEtBC,MAAMtF,QAAQuF,MAGvBC,iBAAiBC,EAAKhB,EAASC,EAAOC,EAAOC,EAAQC,GACjD,OAAOrG,KAAKF,GAAGS,YACV2G,MAAM,CACHrE,GAAI7C,KAAKF,GAAGG,OAAO4C,GACnBoD,QAASA,EACJO,MAAM,KACNC,KAAKC,GAAMA,EAAEC,SACbC,QAAQC,GAAMA,IACnBX,MAAAA,EACAC,MAAOlD,OAAOkD,GACdC,OAAAA,EACAC,cAAeA,EACVG,MAAM,KACNC,KAAKC,GAAMA,EAAEC,SACbC,QAAQC,GAAMA,MAEtB1G,MAAMgH,IACHnH,KAAKoH,mBAAqBH,EAE1BzF,QAAQC,IAAI,4BAA6BH,KAAKC,UAAU4F,EAAgBE,UACxErH,KAAKO,YAAc4G,EAAgBE,QACnCrH,KAAKI,QAAQ,uBAAwBkB,KAAKC,UAAU4F,EAAgBE,aAEvEP,OAAOQ,IACJ9F,QAAQuF,KAAKO,GACbtH,KAAKoH,mBAAqBH,EAC1BjH,KAAKI,QAAQ,gCAIzBmH,6BAA6BN,EAAKhB,EAASC,GACvC,OAAOlG,KAAKF,GAAGS,YACViH,kBAAkB,CACf3E,GAAI7C,KAAKF,GAAGG,OAAO4C,GACnBoD,QAASA,EACJO,MAAM,KACNC,KAAKC,GAAMA,EAAEC,SACbC,QAAQC,GAAMA,IACnBX,MAAAA,IAEH/F,MAAMsH,IACHzH,KAAK0H,+BAAiCT,EACtCjH,KAAK2H,0BAA4BF,EAAOxH,OAAO2H,SAC/C5H,KAAKI,QAAQ,iCAEhB0G,OAAOQ,IACJ9F,QAAQuF,KAAKO,GACbtH,KAAK0H,+BAAiCT,EACtCjH,KAAKI,QAAQ,sCAGzByH,mBACI,OAAO7H,KAAKF,GAAGU,aAAa+F,OAAOO,MAAMtF,QAAQuF,MAErDe,oBACI,OAAO9H,KAAKF,GAAGU,aACV0G,QACA/G,MAAMsH,IACHzH,KAAKQ,aAAeiH,EAAOjH,aAC3BR,KAAK+H,mBAAqBN,EAAOM,mBACjC/H,KAAKgI,mBAAqBP,EAAOO,mBACjChI,KAAKI,QAAQ,4BAEhB0G,OAAOQ,IACJ9F,QAAQuF,KAAKO,GACbtH,KAAKI,QAAQ,iCAGzB6H,mBAAmBC,GACf,MAAMrF,EAAKsF,SAASD,EAAS,KAAO,EAC9BE,EAAQvF,EAAK,EAAI,CAAEA,GAAAA,GAAO,CAAEoE,IAAKiB,GACvC,OAAOlI,KAAKF,GAAGU,aACV6H,OAAOD,GACPjI,MAAMsH,IACHzH,KAAKsI,2BAA6Bb,EAAOnH,QACzCN,KAAKuI,uBAAyBd,EAAOe,OAAS,GAE9C,MAAMC,EAAchB,EAAOgB,aAAe,GAC1CzI,KAAK0I,sBAAwBD,EAAY5F,IAAM,EAC/C7C,KAAK2I,uBAAyBF,EAAYxB,KAAO,GACjDjH,KAAK4I,wBAA0BH,EAAYrF,MAAQ,GACnDpD,KAAK6I,+BAAiCJ,EAAYpG,aAAe,GACjErC,KAAK8I,wBAA0BL,EAAYM,MAAQ,GACnD/I,KAAKgJ,6BAA+BP,EAAYQ,WAAa,GAC7DjJ,KAAKkJ,wBAA0BT,EAAYU,MAAQ,SAE/C1B,EAAOnH,QACPN,KAAKI,QAAQ,0BAIjBJ,KAAKI,QAAQ,kCAGhB0G,OAAOQ,IACJ9F,QAAQuF,KAAKO,GACbtH,KAAKI,QAAQ,kCAGzBgJ,wBACI,OAAOpJ,KAAKF,GAAGuJ,SACVC,gBACAnJ,MAAMsH,IACHzH,KAAKuJ,SAAW9B,EAAO8B,SACvBvJ,KAAKwJ,gBAAkB/B,EAAO+B,gBAC9BxJ,KAAKI,QAAQ,gCAEhB0G,OAAOQ,IACJ9F,QAAQuF,KAAKO,GACbtH,KAAKI,QAAQ,qCAGzBqJ,iBAAiBvB,GACb,MAAMrF,EAAKsF,SAASD,EAAS,KAAO,EAC9BE,EAAQvF,EAAK,EAAI,CAAEA,GAAAA,GAAO,CAAEoE,IAAKiB,GACvC,OAAOlI,KAAKF,GAAGuJ,SACVK,SAAStB,GACTjI,MAAMsH,IACHzH,KAAK2J,yBAA2BlC,EAAOnH,QACvCN,KAAK4J,qBAAuBnC,EAAOe,OAAS,GAE5C,MAAMqB,EAAUpC,EAAOoC,SAAW,GAClC7J,KAAK8J,mBAAqBD,EAAQhH,IAAM,EACxC7C,KAAK+J,oBAAsBF,EAAQ5C,KAAO,GAEtCQ,EAAOnH,QACPN,KAAKI,QAAQ,wBAIjBJ,KAAKI,QAAQ,gCAEhB0G,OAAOQ,IACJ9F,QAAQuF,KAAKO,GACbtH,KAAKI,QAAQ,gCAGzB4J,gBAAgB9B,GACZ,MAAMrF,EAAKsF,SAASD,EAAS,KAAO,EAC9BE,EAAQvF,EAAK,EAAI,CAAEA,GAAAA,GAAO,CAAEoE,IAAKiB,GACvC,OAAOlI,KAAKF,GAAGuJ,SACVY,QAAQ7B,GACRjI,MAAMsH,IACHzH,KAAKkK,wBAA0BzC,EAAOnH,QACtCN,KAAKmK,oBAAsB1C,EAAOe,OAAS,GAE3C,MAAMqB,EAAUpC,EAAOoC,SAAW,GAClC7J,KAAKoK,kBAAoBP,EAAQhH,IAAM,EACvC7C,KAAKqK,mBAAqBR,EAAQ5C,KAAO,GAErCQ,EAAOnH,QACPN,KAAKI,QAAQ,uBAIjBJ,KAAKI,QAAQ,+BAEhB0G,OAAOQ,IACJ9F,QAAQuF,KAAKO,GACbtH,KAAKI,QAAQ,+BAGzBkK,iBACI,OAAOtK,KAAKF,GAAGY,WAAW6F,OAE9BgE,kBACI,OAAOvK,KAAKF,GAAGY,WAAW8J,QAE9BC,mBACI,OAAOzK,KAAKF,GAAGY,WAAW4D,SAE9BoG,oBACI,OAAO1K,KAAKF,GAAGa,IAAIgK,iBAEvBC,gBAAgB1C,GAEZ,OADAlI,KAAKY,gBAAkBsH,EAChBlI,KAAKF,GAAGa,IAAIkK,oBAEvBC,mBACI,OAAO9K,KAAKF,GAAGa,IAAIoK,gBAEvBC,gBACI,OAAOhL,KAAKF,GAAGa,IAAIsK,aAEvBC,iBACI,OAAOlL,KAAKF,GAAGa,IAAIwK,cAEvBC,mBACI,OAAOpL,KAAKF,GAAGa,IAAI0K,gBAEvBC,aAAa7I,GACT,OAAOzC,KAAKF,GAAGyL,UAAUC,IAAI/I,GAEjCgJ,cAAcC,EAAOtK,GACjB,OAAOpB,KAAKF,GAAGyL,UAAUI,KAAKD,EAAOtK,GAEzCwK,aAAaC,EAAMpJ,EAAKF,GACpB,OAAOvC,KAAKF,GAAGe,QAAQiL,MAAM,CAAED,KAAAA,EAAMpJ,IAAAA,EAAKF,MAAAA,IAE9CwJ,YAAYF,EAAMpJ,EAAKF,GACnB,OAAOvC,KAAKF,GAAGe,QAAQmL,KAAK,CAAEH,KAAAA,EAAMpJ,IAAAA,EAAKF,MAAAA,IAE7C0J,cAAcJ,EAAMpJ,EAAKF,GACrB,OAAOvC,KAAKF,GAAGe,QAAQqL,OAAO,CAAEL,KAAAA,EAAMpJ,IAAAA,EAAKF,MAAAA,IAE/C4J,uBACI,OAAOnM,KAAKF,GAAGe,QAAQuL,gBAG3BC,qBAAqBnE,GACjB,MAAMrF,EAAKsF,SAASD,EAAS,KAAO,EAC9BE,EAAQvF,EAAK,EAAI,CAAEA,GAAAA,GAAO,CAAEoE,IAAKiB,GAAW,OAClD,OAAOlI,KAAKF,GAAGW,iBAAiB8F,KAAK6B,GAEzCkE,sBAAsBpE,GAClB,MAAMrF,EAAKsF,SAASD,EAAS,KAAO,EAC9BE,EAAQvF,EAAK,EAAI,CAAEA,GAAAA,GAAO,CAAEoE,IAAKiB,GACvC,OAAOlI,KAAKF,GAAGW,iBACVyG,MAAMkB,GACNjI,MAAMsH,IACHzH,KAAKuM,2BAA6BrE,EAClClI,KAAKwM,gBAAkB/E,EACvBzH,KAAKI,QAAQ,6BACbJ,KAAKI,QAAQ,mCAEhB0G,OAAOQ,IACJ9F,QAAQuF,KAAKO,GACbtH,KAAKuM,2BAA6BrE,EAClClI,KAAKyM,0BAA6BnF,GAAOA,EAAIoF,SAAY,GACzD1M,KAAKI,QAAQ,kCACbJ,KAAKI,QAAQ,wCAIzBuM,eAAehL,GACX,OAAO3B,KAAKF,GAAG8M,eAAejL,GAElCkL,qBAAqBlL,EAAW,IAC5B,OAAO3B,KAAKF,GAAG8M,eAAejL,EAASmL,eAE3CC,sBAAsBC,GAClB,OAAOhN,KAAKF,GAAGmN,sBAAsBD,GAEzCE,cACI,OAAOlN,KAAKF,GAAGqN,eAIvBC,OAAOxN,eAAiBA,ECnexBwN,OAAOxN,eAAiBA,G","sources":["webpack://gamescore_unity/./src/GameScoreUnity.js","webpack://gamescore_unity/./src/index.js"],"sourcesContent":["export default class GameScoreUnity {\r\n    constructor(gs, unity) {\r\n        this.gs = gs;\r\n        this.unity = unity;\r\n\r\n        this.gs.player.ready.then(() => {\r\n            // var data = { \"ID\": this.gs.player.id, \"Name\": this.gs.player.name, \"Score\": this.gs.player.score, \"AvatarURL\": this.gs.player.avatar };\r\n            // this.trigger('StorePlayerData', data);\r\n            this.trigger('CallPlayerReady');\r\n        });\r\n\r\n        // this.gs.ready.then(() => {\r\n        //     var data = { \"Title\": this.gs.app.title, \"Description\": this.gs.app.description, \"AppImageURL\": this.gs.app.image, \"AppURL\": this.gs.app.url };\r\n        //     this.trigger('StoreAppData', data);\r\n        // });\r\n\r\n        this.gs.player.on('change', () => this.trigger('CallPlayerChange'));\r\n        this.gs.player.on('sync', (success) => {\r\n            this.trigger(success ? 'CallPlayerSyncComplete' : 'CallPlayerSyncError');\r\n        });\r\n        this.gs.player.on('load', (success) => {\r\n            this.trigger(success ? 'CallPlayerLoadComplete' : 'CallPlayerLoadError');\r\n        });\r\n        this.gs.player.on('login', (success) => {\r\n            this.trigger(success ? 'CallPlayerLoginComplete' : 'CallPlayerLoginError');\r\n        });\r\n        this.gs.player.on('fetchFields', (success) => {\r\n            this.trigger(success ? 'CallPlayerFetchFieldsComplete' : 'CallPlayerFetchFieldsError');\r\n        });\r\n\r\n        // leaderboard\r\n        this.gs.leaderboard.on('open', () => this.trigger('CallLeaderboardOpen'));\r\n\r\n        // achievements\r\n        this.gs.achievements.on('open', () => this.trigger('CallAchievementsOpen'));\r\n        this.gs.achievements.on('close', () => this.trigger('CallAchievementsClose'));\r\n\r\n        this.gs.achievements.on('unlock', () => this.trigger('CallAchievementsUnlock'));\r\n        this.gs.achievements.on('error:unlock', () => this.trigger('CallAchievementsUnlockError'));\r\n\r\n        // games collections\r\n        this.gs.gamesCollections.on('open', () => this.trigger('CallGamesCollectionsOpen'));\r\n        this.gs.gamesCollections.on('close', () => this.trigger('CallGamesCollectionsClose'));\r\n\r\n        // fullscreen\r\n        this.gs.fullscreen.on('open', () => this.trigger('CallFullscreenOpen'));\r\n        this.gs.fullscreen.on('close', () => this.trigger('CallFullscreenClose'));\r\n        this.gs.fullscreen.on('change', () => this.trigger('CallFullscreenChange'));\r\n\r\n        // ads\r\n        this.gs.ads.on('start', () => this.trigger('CallAdsStart'));\r\n        this.gs.ads.on('close', (success) => this.trigger('CallAdsClose', success));\r\n\r\n        this.gs.ads.on('fullscreen:start', () => this.trigger('CallAdsFullscreenStart'));\r\n        this.gs.ads.on('fullscreen:close', (success) => this.trigger('CallAdsFullscreenClose', success));\r\n\r\n        this.gs.ads.on('preloader:start', () => this.trigger('CallAdsPreloaderStart'));\r\n        this.gs.ads.on('preloader:close', (success) => this.trigger('CallAdsPreloaderClose', success));\r\n\r\n        this.gs.ads.on('rewarded:start', () => this.trigger('CallAdsRewardedStart'));\r\n        this.gs.ads.on('rewarded:close', (success) => this.trigger('CallAdsRewardedClose', (success)));\r\n        this.gs.ads.on('rewarded:reward', () => this.trigger('CallAdsRewardedReward', this.lastRewardedTag));\r\n\r\n        this.gs.ads.on('sticky:start', () => this.trigger('CallAdsStickyStart'));\r\n        this.gs.ads.on('sticky:close', () => this.trigger('CallAdsStickyClose'));\r\n        this.gs.ads.on('sticky:refresh', () => this.trigger('CallAdsStickyRefresh'));\r\n        this.gs.ads.on('sticky:render', () => this.trigger('CallAdsStickyRender'));\r\n\r\n        // socials\r\n        this.gs.socials.on('share', (success) => this.trigger('CallSocialsShare', success));\r\n        this.gs.socials.on('post', (success) => this.trigger('CallSocialsPost', success));\r\n        this.gs.socials.on('invite', (success) => this.trigger('CallSocialsInvite', success));\r\n        this.gs.socials.on('joinCommunity', (success) => this.trigger('CallSocialsJoinCommunity', success));\r\n\r\n        // gs\r\n        this.gs.on('change:language', (lang) => this.trigger('CallChangeLanguage', lang));\r\n        this.gs.on('change:avatarGenerator', (ag) => this.trigger('CallChangeAvatarGenerator', ag));\r\n        this.gs.on('overlay:ready', () => this.trigger('CallOverlayReady'));\r\n    }\r\n    trigger(eventName, ...params) {\r\n\r\n        this.unity.SendMessage('GameScoreSDK', eventName, this.toUnity(...params));\r\n    }\r\n\r\n    toUnity(value) {\r\n        switch (typeof (value)) {\r\n            case 'boolean': {\r\n                return String(value);\r\n            }\r\n            case 'number': {\r\n                return value;\r\n            }\r\n            case 'string': {\r\n                return value;\r\n            }\r\n            case 'object': {\r\n                return JSON.stringify(value);\r\n            }\r\n        }\r\n        console.log(\"Не зашел в цикл проверки и вернул значение\", value);\r\n\r\n        return value;\r\n    }\r\n\r\n    Language() {\r\n        return this.gs.language;\r\n    }\r\n    AvatarGenerator() {\r\n        return this.toUnity(this.gs.avatarGenerator);\r\n    }\r\n    PlatformType() {\r\n        return this.toUnity(this.gs.platform.type);\r\n    }\r\n\r\n    AppTitle() {\r\n        return this.gs.app.title;\r\n    }\r\n    AppDescription() {\r\n        return this.gs.app.description;\r\n    }\r\n    AppImage() {\r\n        return this.gs.app.image;\r\n    }\r\n    AppUrl() {\r\n        return this.gs.app.url;\r\n    }\r\n\r\n    SocialsCommunityLink() {\r\n        return this.gs.socials.communityLink;\r\n    }\r\n\r\n    PlayerGetID() {\r\n        return this.gs.player.id;\r\n    }\r\n\r\n    PlayerGetScore() {\r\n        return this.gs.player.score;\r\n    }\r\n    PlayerSetScore(score) {\r\n        this.gs.player.score = Number(score);\r\n    }\r\n    PlayerAddScore(score) {\r\n        this.gs.player.score += Number(score);\r\n    }\r\n\r\n    PlayerGetName() {\r\n        return this.gs.player.name;\r\n    }\r\n    PlayerSetName(name) {\r\n        this.gs.player.name = name;\r\n    }\r\n\r\n    PlayerGetAvatar() {\r\n        return this.gs.player.avatar;\r\n    }\r\n    PlayerSetAvatar(src) {\r\n        this.gs.player.avatar = src;\r\n    }\r\n\r\n    PlayerGet(key) {\r\n        return this.toUnity(this.gs.player.get(key));\r\n    }\r\n\r\n    PlayerSet(key, value) {\r\n        this.gs.player.set(key, value);\r\n    }\r\n    PlayerAdd(key, value) {\r\n        this.gs.player.add(key, Number(value));\r\n    }\r\n\r\n    PlayerHas(key) {\r\n        return this.toUnity(this.gs.player.has(key));\r\n    }\r\n\r\n    PlayerSetFlag(key, value) {\r\n        this.gs.player.set(key, !Boolean(value));\r\n    }\r\n    PlayerToggle(key) {\r\n        this.gs.player.toggle(key);\r\n    }\r\n\r\n    PlayerGetFieldName(key) {\r\n        return this.gs.player.getFieldName(key);\r\n    }\r\n    PlayerGetFieldVariantName(key, value) {\r\n        return this.gs.player.getFieldVariantName(key, value);\r\n    }\r\n    PlayerGetFieldVariantAt(key, index) {\r\n        const variant = this.gs.player.getField(key).variants[index];\r\n        return variant ? variant.value : '';\r\n    }\r\n    PlayerGetFieldVariantIndex(key, value) {\r\n        return this.gs.player.getField(key).variants.findIndex((v) => v.value === value);\r\n    }\r\n\r\n    PlayerReset() {\r\n        this.gs.player.reset();\r\n    }\r\n    PlayerRemove() {\r\n        this.gs.player.remove();\r\n    }\r\n    PlayerSync(override = false) {\r\n        return this.gs.player.sync({ override: Boolean(override) });\r\n    }\r\n    PlayerLoad() {\r\n        return this.gs.player.load();\r\n    }\r\n    PlayerLogin() {\r\n        return this.gs.player.login();\r\n    }\r\n    PlayerFetchFields() {\r\n        return this.gs.player.fetchFields();\r\n    }\r\n\r\n    LeaderboardOpen(orderBy, order, limit, withMe, includeFields, displayFields) {\r\n        return this.gs.leaderboard\r\n            .open({\r\n                id: this.gs.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n                limit: Number(limit),\r\n                withMe,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                displayFields: displayFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .catch(console.warn);\r\n    }\r\n\r\n    LeaderboardFetch(tag, orderBy, order, limit, withMe, includeFields) {\r\n        return this.gs.leaderboard\r\n            .fetch({\r\n                id: this.gs.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n                limit: Number(limit),\r\n                withMe,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((leaderboardInfo) => {\r\n                this.lastLeaderboardTag = tag;\r\n                // console.log(\"LeaderboardInfo players: \", leaderboardInfo.players);\r\n                console.log(\"LeaderboardInfo players: \", JSON.stringify(leaderboardInfo.players));\r\n                this.leaderboard = leaderboardInfo.players;\r\n                this.trigger('CallLeaderboardFetch', JSON.stringify(leaderboardInfo.players));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.lastLeaderboardTag = tag;\r\n                this.trigger('CallLeaderboardFetchError');\r\n            });\r\n    }\r\n\r\n    LeaderboardFetchPlayerRating(tag, orderBy, order) {\r\n        return this.gs.leaderboard\r\n            .fetchPlayerRating({\r\n                id: this.gs.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n            })\r\n            .then((result) => {\r\n                this.lastLeaderboardPlayerRatingTag = tag;\r\n                this.leaderboardPlayerPosition = result.player.position;\r\n                this.trigger('CallLeaderboardFetchPlayer');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.lastLeaderboardPlayerRatingTag = tag;\r\n                this.trigger('CallLeaderboardFetchPlayerError');\r\n            });\r\n    }\r\n    AchievementsOpen() {\r\n        return this.gs.achievements.open().catch(console.warn);\r\n    }\r\n    AchievementsFetch() {\r\n        return this.gs.achievements\r\n            .fetch()\r\n            .then((result) => {\r\n                this.achievements = result.achievements;\r\n                this.achievementsGroups = result.achievementsGroups;\r\n                this.playerAchievements = result.playerAchievements;\r\n                this.trigger('CallAchievementsFetch');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallAchievementsFetchError');\r\n            });\r\n    }\r\n    AchievementsUnlock(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gs.achievements\r\n            .unlock(query)\r\n            .then((result) => {\r\n                this.isUnlockAchievementSuccess = result.success;\r\n                this.unlockAchievementError = result.error || '';\r\n\r\n                const achievement = result.achievement || {};\r\n                this.unlockedAchievementId = achievement.id || 0;\r\n                this.unlockedAchievementTag = achievement.tag || '';\r\n                this.unlockedAchievementName = achievement.name || '';\r\n                this.unlockedAchievementDescription = achievement.description || '';\r\n                this.unlockedAchievementIcon = achievement.icon || '';\r\n                this.unlockedAchievementIconSmall = achievement.iconSmall || '';\r\n                this.unlockedAchievementRare = achievement.rare || 'COMMON';\r\n\r\n                if (result.success) {\r\n                    this.trigger('CallAchievementsUnlock');\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallAchievementsUnlockError');\r\n            })\r\n\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallAchievementsUnlockError');\r\n            });\r\n    }\r\n    PaymentsFetchProducts() {\r\n        return this.gs.payments\r\n            .fetchProducts()\r\n            .then((result) => {\r\n                this.products = result.products;\r\n                this.playerPurchases = result.playerPurchases;\r\n                this.trigger('CallPaymentsFetchProducts');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsFetchProductsError');\r\n            });\r\n    }\r\n    PaymentsPurchase(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gs.payments\r\n            .purchase(query)\r\n            .then((result) => {\r\n                this.isPurchaseProductSuccess = result.success;\r\n                this.purchaseProductError = result.error || '';\r\n\r\n                const product = result.product || {};\r\n                this.purchasedProductId = product.id || 0;\r\n                this.purchasedProductTag = product.tag || '';\r\n\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsPurchase');\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallPaymentsPurchaseError');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsPurchaseError');\r\n            });\r\n    }\r\n    PaymentsConsume(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gs.payments\r\n            .consume(query)\r\n            .then((result) => {\r\n                this.isConsumeProductSuccess = result.success;\r\n                this.consumeProductError = result.error || '';\r\n\r\n                const product = result.product || {};\r\n                this.consumedProductId = product.id || 0;\r\n                this.consumedProductTag = product.tag || '';\r\n\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsConsume');\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallPaymentsConsumeError');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsConsumeError');\r\n            });\r\n    }\r\n    FullscreenOpen() {\r\n        return this.gs.fullscreen.open();\r\n    }\r\n    FullscreenClose() {\r\n        return this.gs.fullscreen.close();\r\n    }\r\n    FullscreenToggle() {\r\n        return this.gs.fullscreen.toggle();\r\n    }\r\n    AdsShowFullscreen() {\r\n        return this.gs.ads.showFullscreen();\r\n    }\r\n    AdsShowRewarded(idOrTag) {\r\n        this.lastRewardedTag = idOrTag;\r\n        return this.gs.ads.showRewardedVideo();\r\n    }\r\n    AdsShowPreloader() {\r\n        return this.gs.ads.showPreloader();\r\n    }\r\n    AdsShowSticky() {\r\n        return this.gs.ads.showSticky();\r\n    }\r\n    AdsCloseSticky() {\r\n        return this.gs.ads.closeSticky();\r\n    }\r\n    AdsRefreshSticky() {\r\n        return this.gs.ads.refreshSticky();\r\n    }\r\n    AnalyticsHit(url) {\r\n        return this.gs.analytics.hit(url);\r\n    }\r\n    AnalyticsGoal(event, value) {\r\n        return this.gs.analytics.goal(event, value);\r\n    }\r\n    SocialsShare(text, url, image) {\r\n        return this.gs.socials.share({ text, url, image });\r\n    }\r\n    SocialsPost(text, url, image) {\r\n        return this.gs.socials.post({ text, url, image });\r\n    }\r\n    SocialsInvite(text, url, image) {\r\n        return this.gs.socials.invite({ text, url, image });\r\n    }\r\n    SocialsJoinCommunity() {\r\n        return this.gs.socials.joinCommunity();\r\n    }\r\n    // games collections\r\n    GamesCollectionsOpen(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag || 'ANY' };\r\n        return this.gs.gamesCollections.open(query);\r\n    }\r\n    GamesCollectionsFetch(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gs.gamesCollections\r\n            .fetch(query)\r\n            .then((result) => {\r\n                this.lastGamesCollectionIdOrTag = idOrTag;\r\n                this.gamesCollection = result;\r\n                this.trigger('CallGamesCollectionsFetch');\r\n                this.trigger('CallGamesCollectionsFetchAny');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.lastGamesCollectionIdOrTag = idOrTag;\r\n                this.gamesCollectionFetchError = (err && err.message) || '';\r\n                this.trigger('CallGamesCollectionsFetchError');\r\n                this.trigger('CallGamesCollectionsFetchAnyError');\r\n            });\r\n    }\r\n\r\n    ChangeLanguage(language) {\r\n        return this.gs.changeLanguage(language);\r\n    }\r\n    ChangeLanguageByCode(language = '') {\r\n        return this.gs.changeLanguage(language.toLowerCase());\r\n    }\r\n    ChangeAvatarGenerator(generator) {\r\n        return this.gs.changeAvatarGenerator(generator);\r\n    }\r\n    LoadOverlay() {\r\n        return this.gs.loadOverlay();\r\n    }\r\n}\r\n\r\nwindow.GameScoreUnity = GameScoreUnity;\r\n","import GameScoreUnity from './GameScoreUnity'\r\n\r\nwindow.GameScoreUnity = GameScoreUnity;\r\n"],"names":["GameScoreUnity","constructor","gs","unity","this","player","ready","then","trigger","on","success","leaderboard","achievements","gamesCollections","fullscreen","ads","lastRewardedTag","socials","lang","ag","eventName","params","SendMessage","toUnity","value","String","JSON","stringify","console","log","Language","language","AvatarGenerator","avatarGenerator","PlatformType","platform","type","AppTitle","app","title","AppDescription","description","AppImage","image","AppUrl","url","SocialsCommunityLink","communityLink","PlayerGetID","id","PlayerGetScore","score","PlayerSetScore","Number","PlayerAddScore","PlayerGetName","name","PlayerSetName","PlayerGetAvatar","avatar","PlayerSetAvatar","src","PlayerGet","key","get","PlayerSet","set","PlayerAdd","add","PlayerHas","has","PlayerSetFlag","Boolean","PlayerToggle","toggle","PlayerGetFieldName","getFieldName","PlayerGetFieldVariantName","getFieldVariantName","PlayerGetFieldVariantAt","index","variant","getField","variants","PlayerGetFieldVariantIndex","findIndex","v","PlayerReset","reset","PlayerRemove","remove","PlayerSync","override","sync","PlayerLoad","load","PlayerLogin","login","PlayerFetchFields","fetchFields","LeaderboardOpen","orderBy","order","limit","withMe","includeFields","displayFields","open","split","map","o","trim","filter","f","catch","warn","LeaderboardFetch","tag","fetch","leaderboardInfo","lastLeaderboardTag","players","err","LeaderboardFetchPlayerRating","fetchPlayerRating","result","lastLeaderboardPlayerRatingTag","leaderboardPlayerPosition","position","AchievementsOpen","AchievementsFetch","achievementsGroups","playerAchievements","AchievementsUnlock","idOrTag","parseInt","query","unlock","isUnlockAchievementSuccess","unlockAchievementError","error","achievement","unlockedAchievementId","unlockedAchievementTag","unlockedAchievementName","unlockedAchievementDescription","unlockedAchievementIcon","icon","unlockedAchievementIconSmall","iconSmall","unlockedAchievementRare","rare","PaymentsFetchProducts","payments","fetchProducts","products","playerPurchases","PaymentsPurchase","purchase","isPurchaseProductSuccess","purchaseProductError","product","purchasedProductId","purchasedProductTag","PaymentsConsume","consume","isConsumeProductSuccess","consumeProductError","consumedProductId","consumedProductTag","FullscreenOpen","FullscreenClose","close","FullscreenToggle","AdsShowFullscreen","showFullscreen","AdsShowRewarded","showRewardedVideo","AdsShowPreloader","showPreloader","AdsShowSticky","showSticky","AdsCloseSticky","closeSticky","AdsRefreshSticky","refreshSticky","AnalyticsHit","analytics","hit","AnalyticsGoal","event","goal","SocialsShare","text","share","SocialsPost","post","SocialsInvite","invite","SocialsJoinCommunity","joinCommunity","GamesCollectionsOpen","GamesCollectionsFetch","lastGamesCollectionIdOrTag","gamesCollection","gamesCollectionFetchError","message","ChangeLanguage","changeLanguage","ChangeLanguageByCode","toLowerCase","ChangeAvatarGenerator","generator","changeAvatarGenerator","LoadOverlay","loadOverlay","window"],"sourceRoot":""}