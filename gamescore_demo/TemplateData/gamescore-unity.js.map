{"version":3,"file":"gamescore-unity.js","mappings":"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","sources":["webpack://gamescore_unity/./src/GameScoreUnity.js","webpack://gamescore_unity/./src/index.js"],"sourcesContent":["export default class GameScoreUnity {\r\n    constructor(gs, unity) {\r\n        this.gs = gs;\r\n        this.unity = unity;\r\n\r\n        document.addEventListener('click', () => window.focus());\r\n\r\n        this.gs.player.ready.then(() => {\r\n            this.trigger('CallPlayerReady');\r\n        });\r\n\r\n        this.gs.player.on('change', () => this.trigger('CallPlayerChange'));\r\n        this.gs.player.on('sync', (success) => {\r\n            this.trigger(success ? 'CallPlayerSyncComplete' : 'CallPlayerSyncError');\r\n        });\r\n        this.gs.player.on('load', (success) => {\r\n            this.trigger(success ? 'CallPlayerLoadComplete' : 'CallPlayerLoadError');\r\n        });\r\n        this.gs.player.on('login', (success) => {\r\n            this.trigger(success ? 'CallPlayerLoginComplete' : 'CallPlayerLoginError');\r\n        });\r\n\r\n        this.gs.player.on('fetchFields', (success) => {\r\n            if (success) {\r\n                this.trigger('CallPlayerFetchFieldsComplete', JSON.stringify(this.gs.player.fields.map((field) => ({ ...field, defaultValue: field.default }))));\r\n            } else {\r\n                this.trigger('CallPlayerFetchFieldsError');\r\n            }\r\n        });\r\n\r\n        // leaderboard\r\n        this.gs.leaderboard.on('open', () => this.trigger('CallLeaderboardOpen'));\r\n\r\n        // achievements\r\n        this.gs.achievements.on('open', () => this.trigger('CallAchievementsOpen'));\r\n        this.gs.achievements.on('close', () => {\r\n            this.trigger('CallAchievementsClose');\r\n            window.focus();\r\n        });\r\n\r\n        this.gs.achievements.on('unlock', () => this.trigger('CallAchievementsUnlock'));\r\n        this.gs.achievements.on('error:unlock', () => this.trigger('CallAchievementsUnlockError'));\r\n\r\n        // games collections\r\n        this.gs.gamesCollections.on('open', () => this.trigger('CallGamesCollectionsOpen'));\r\n        this.gs.gamesCollections.on('close', () => {\r\n            this.trigger('CallGamesCollectionsClose');\r\n            window.focus();\r\n        });\r\n\r\n        // fullscreen\r\n        this.gs.fullscreen.on('open', () => this.trigger('CallFullscreenOpen'));\r\n        this.gs.fullscreen.on('close', () => this.trigger('CallFullscreenClose'));\r\n        this.gs.fullscreen.on('change', () => this.trigger('CallFullscreenChange'));\r\n\r\n        // ads\r\n        this.gs.ads.on('start', () => this.trigger('CallAdsStart'));\r\n        this.gs.ads.on('close', (success) => {\r\n            this.trigger('CallAdsClose', success);\r\n            window.focus();\r\n        });\r\n\r\n        this.gs.ads.on('fullscreen:start', () => this.trigger('CallAdsFullscreenStart'));\r\n        this.gs.ads.on('fullscreen:close', (success) => this.trigger('CallAdsFullscreenClose', success));\r\n\r\n        this.gs.ads.on('preloader:start', () => this.trigger('CallAdsPreloaderStart'));\r\n        this.gs.ads.on('preloader:close', (success) => this.trigger('CallAdsPreloaderClose', success));\r\n\r\n        this.gs.ads.on('rewarded:start', () => this.trigger('CallAdsRewardedStart'));\r\n        this.gs.ads.on('rewarded:close', (success) => this.trigger('CallAdsRewardedClose', (success)));\r\n        this.gs.ads.on('rewarded:reward', () => this.trigger('CallAdsRewardedReward', this.lastRewardedTag));\r\n\r\n        this.gs.ads.on('sticky:start', () => this.trigger('CallAdsStickyStart'));\r\n        this.gs.ads.on('sticky:close', () => this.trigger('CallAdsStickyClose'));\r\n        this.gs.ads.on('sticky:refresh', () => this.trigger('CallAdsStickyRefresh'));\r\n        this.gs.ads.on('sticky:render', () => this.trigger('CallAdsStickyRender'));\r\n\r\n        // socials\r\n        this.gs.socials.on('share', (success) => {\r\n            this.trigger('CallSocialsShare', success);\r\n            window.focus();\r\n        });\r\n        this.gs.socials.on('post', (success) => {\r\n            this.trigger('CallSocialsPost', success);\r\n            window.focus();\r\n        });\r\n        this.gs.socials.on('invite', (success) => {\r\n            this.trigger('CallSocialsInvite', success);\r\n            window.focus();\r\n        });\r\n        this.gs.socials.on('joinCommunity', (success) => {\r\n            this.trigger('CallSocialsJoinCommunity', success);\r\n        });\r\n\r\n        // gs\r\n        this.gs.on('change:language', (lang) => this.trigger('CallChangeLanguage', lang));\r\n        this.gs.on('change:avatarGenerator', (ag) => this.trigger('CallChangeAvatarGenerator', ag));\r\n        this.gs.on('overlay:ready', () => this.trigger('CallOverlayReady'));\r\n    }\r\n    trigger(eventName, ...params) {\r\n\r\n        this.unity.SendMessage('GameScoreSDK', eventName, this.toUnity(...params));\r\n    }\r\n\r\n    toUnity(value) {\r\n        switch (typeof (value)) {\r\n            case 'boolean': {\r\n                return String(value);\r\n            }\r\n            case 'number': {\r\n                return value;\r\n            }\r\n            case 'string': {\r\n                return value;\r\n            }\r\n            case 'object': {\r\n                return JSON.stringify(value);\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    Language() {\r\n        return this.gs.language;\r\n    }\r\n    AvatarGenerator() {\r\n        return this.gs.avatarGenerator;\r\n    }\r\n    PlatformType() {\r\n        return this.gs.platform.type;\r\n    }\r\n    PlatformHasIntegratedAuth() {\r\n        return this.toUnity(this.gs.platform.hasIntegratedAuth);\r\n    }\r\n    PlatformIsExternalLinksAllowed() {\r\n        return this.toUnity(this.gs.platform.isExternalLinksAllowed);\r\n    }\r\n\r\n    AppTitle() {\r\n        return this.gs.app.title;\r\n    }\r\n    AppDescription() {\r\n        return this.gs.app.description;\r\n    }\r\n    AppImage() {\r\n        return this.gs.app.image;\r\n    }\r\n    AppUrl() {\r\n        return this.gs.app.url;\r\n    }\r\n\r\n\r\n    PlayerGetID() {\r\n        return this.gs.player.id;\r\n    }\r\n\r\n    PlayerGetScore() {\r\n        return this.gs.player.score;\r\n    }\r\n    PlayerSetScore(score) {\r\n        this.gs.player.score = Number(score);\r\n    }\r\n    PlayerAddScore(score) {\r\n        this.gs.player.score += Number(score);\r\n    }\r\n\r\n    PlayerGetName() {\r\n        return this.gs.player.name;\r\n    }\r\n    PlayerSetName(name) {\r\n        this.gs.player.name = name;\r\n    }\r\n\r\n    PlayerGetAvatar() {\r\n        return this.gs.player.avatar;\r\n    }\r\n    PlayerSetAvatar(src) {\r\n        this.gs.player.avatar = src;\r\n    }\r\n\r\n    PlayerGet(key) {\r\n        return this.toUnity(this.gs.player.get(key));\r\n    }\r\n\r\n    PlayerSet(key, value) {\r\n        this.gs.player.set(key, value);\r\n    }\r\n    PlayerAdd(key, value) {\r\n        this.gs.player.add(key, Number(value));\r\n    }\r\n\r\n    PlayerHas(key) {\r\n        return this.toUnity(this.gs.player.has(key));\r\n    }\r\n\r\n    PlayerSetFlag(key, value) {\r\n        this.gs.player.set(key, !Boolean(value));\r\n    }\r\n    PlayerToggle(key) {\r\n        this.gs.player.toggle(key);\r\n    }\r\n\r\n    PlayerGetFieldName(key) {\r\n        return this.gs.player.getFieldName(key);\r\n    }\r\n    PlayerGetFieldVariantName(key, value) {\r\n        return this.gs.player.getFieldVariantName(key, value);\r\n    }\r\n    PlayerGetFieldVariantAt(key, index) {\r\n        const variant = this.gs.player.getField(key).variants[index];\r\n        return variant ? variant.value : '';\r\n    }\r\n    PlayerGetFieldVariantIndex(key, value) {\r\n        return this.gs.player.getField(key).variants.findIndex((v) => v.value === value);\r\n    }\r\n\r\n    PlayerReset() {\r\n        this.gs.player.reset();\r\n    }\r\n    PlayerRemove() {\r\n        this.gs.player.remove();\r\n    }\r\n    PlayerSync(override = false) {\r\n        return this.gs.player.sync({ override: Boolean(override) });\r\n    }\r\n    PlayerLoad() {\r\n        return this.gs.player.load();\r\n    }\r\n    PlayerLogin() {\r\n        return this.gs.player.login();\r\n    }\r\n    PlayerFetchFields() {\r\n        this.gs.player.fetchFields();\r\n    }\r\n\r\n    PlayerIsLoggedIn() {\r\n        return this.toUnity(this.gs.player.isLoggedIn);\r\n    }\r\n\r\n    PlayerHasAnyCredentials(key) {\r\n        return this.toUnity(this.gs.player.hasAnyCredentials);\r\n    }\r\n\r\n    PlayerIsStub(key) {\r\n        return this.toUnity(this.gs.player.isStub);\r\n    }\r\n\r\n\r\n    LeaderboardOpen(orderBy, order, limit, withMe, includeFields, displayFields) {\r\n        return this.gs.leaderboard\r\n            .open({\r\n                id: this.gs.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n                limit: Number(limit),\r\n                withMe,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                displayFields: displayFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .catch(console.warn);\r\n    }\r\n\r\n    LeaderboardFetch(tag, orderBy, order, limit, withMe, includeFields) {\r\n        return this.gs.leaderboard\r\n            .fetch({\r\n                id: this.gs.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n                limit: Number(limit),\r\n                withMe,\r\n                includeFields: includeFields\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n            })\r\n            .then((leaderboardInfo) => {\r\n                this.lastLeaderboardTag = tag;\r\n                this.leaderboard = leaderboardInfo.players;\r\n\r\n                this.trigger('CallLeaderboardFetchTag', tag);\r\n                this.trigger('CallLeaderboardFetch', JSON.stringify(leaderboardInfo.players));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.lastLeaderboardTag = tag;\r\n                this.trigger('CallLeaderboardFetchError');\r\n            });\r\n    }\r\n\r\n    LeaderboardFetchPlayerRating(tag, orderBy, order) {\r\n        return this.gs.leaderboard\r\n            .fetchPlayerRating({\r\n                id: this.gs.player.id,\r\n                orderBy: orderBy\r\n                    .split(',')\r\n                    .map((o) => o.trim())\r\n                    .filter((f) => f),\r\n                order,\r\n            })\r\n            .then((result) => {\r\n                this.lastLeaderboardPlayerRatingTag = tag;\r\n                this.leaderboardPlayerPosition = result.player.position;\r\n                this.trigger('CallLeaderboardFetchPlayerTag', tag);\r\n                this.trigger('CallLeaderboardFetchPlayer', result.player.position);\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.lastLeaderboardPlayerRatingTag = tag;\r\n                this.trigger('CallLeaderboardFetchPlayerError');\r\n            });\r\n    }\r\n    AchievementsOpen() {\r\n        return this.gs.achievements.open().catch(console.warn);\r\n    }\r\n    AchievementsFetch() {\r\n        return this.gs.achievements\r\n            .fetch()\r\n            .then((result) => {\r\n                this.achievements = result.achievements;\r\n                this.achievementsGroups = result.achievementsGroups;\r\n                this.playerAchievements = result.playerAchievements;\r\n\r\n                this.trigger('CallAchievementsFetch', JSON.stringify(result.achievements));\r\n                this.trigger('CallAchievementsFetchGroups', JSON.stringify(result.achievementsGroups));\r\n                this.trigger('CallPlayerAchievementsFetch', JSON.stringify(result.playerAchievements));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallAchievementsFetchError');\r\n            });\r\n    }\r\n    AchievementsUnlock(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gs.achievements\r\n            .unlock(query)\r\n            .then((result) => {\r\n                this.isUnlockAchievementSuccess = result.success;\r\n                this.unlockAchievementError = result.error || '';\r\n\r\n                const achievement = result.achievement || {};\r\n                this.unlockedAchievementId = achievement.id || 0;\r\n                this.unlockedAchievementTag = achievement.tag || '';\r\n                this.unlockedAchievementName = achievement.name || '';\r\n                this.unlockedAchievementDescription = achievement.description || '';\r\n                this.unlockedAchievementIcon = achievement.icon || '';\r\n                this.unlockedAchievementIconSmall = achievement.iconSmall || '';\r\n                this.unlockedAchievementRare = achievement.rare || 'COMMON';\r\n\r\n                if (result.success) {\r\n                    this.trigger('CallAchievementsUnlock', idOrTag);\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallAchievementsUnlockError');\r\n            })\r\n\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallAchievementsUnlockError');\r\n            });\r\n    }\r\n    PaymentsFetchProducts() {\r\n        return this.gs.payments\r\n            .fetchProducts()\r\n            .then((result) => {\r\n                this.products = result.products;\r\n                this.playerPurchases = result.playerPurchases;\r\n                this.trigger('CallPaymentsFetchProducts', JSON.stringify(result.products));\r\n                this.trigger('CallPaymentsFetchPlayerPurcahses', JSON.stringify(result.playerPurchases));\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsFetchProductsError');\r\n            });\r\n    }\r\n    PaymentsPurchase(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gs.payments\r\n            .purchase(query)\r\n            .then((result) => {\r\n                this.isPurchaseProductSuccess = result.success;\r\n                this.purchaseProductError = result.error || '';\r\n\r\n                const product = result.product || {};\r\n                this.purchasedProductId = product.id || 0;\r\n                this.purchasedProductTag = product.tag || '';\r\n\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsPurchase', idOrTag);\r\n                    window.focus();\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallPaymentsPurchaseError');\r\n\r\n                window.focus();\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsPurchaseError');\r\n                window.focus();\r\n            });\r\n    }\r\n    PaymentsConsume(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gs.payments\r\n            .consume(query)\r\n            .then((result) => {\r\n                this.isConsumeProductSuccess = result.success;\r\n                this.consumeProductError = result.error || '';\r\n\r\n                const product = result.product || {};\r\n                this.consumedProductId = product.id || 0;\r\n                this.consumedProductTag = product.tag || '';\r\n\r\n                if (result.success) {\r\n                    this.trigger('CallPaymentsConsume', idOrTag);\r\n                    window.focus();\r\n                    return;\r\n                }\r\n\r\n                this.trigger('CallPaymentsConsumeError');\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.trigger('CallPaymentsConsumeError');\r\n            });\r\n    }\r\n\r\n\r\n    PaymentsIsAvailable() {\r\n        return this.toUnity(this.gs.payments.isAvailable);\r\n    }\r\n\r\n\r\n    FullscreenOpen() {\r\n        return this.gs.fullscreen.open();\r\n    }\r\n    FullscreenClose() {\r\n        return this.gs.fullscreen.close();\r\n    }\r\n    FullscreenToggle() {\r\n        return this.gs.fullscreen.toggle();\r\n    }\r\n    AdsShowFullscreen() {\r\n        return this.gs.ads.showFullscreen();\r\n    }\r\n    AdsShowRewarded(idOrTag) {\r\n        this.lastRewardedTag = idOrTag;\r\n        return this.gs.ads.showRewardedVideo();\r\n    }\r\n    AdsShowPreloader() {\r\n        return this.gs.ads.showPreloader();\r\n    }\r\n    AdsShowSticky() {\r\n        return this.gs.ads.showSticky();\r\n    }\r\n    AdsCloseSticky() {\r\n        return this.gs.ads.closeSticky();\r\n    }\r\n    AdsRefreshSticky() {\r\n        return this.gs.ads.refreshSticky();\r\n    }\r\n\r\n\r\n    AdsIsAdblockEnabled() {\r\n        return this.toUnity(this.gs.ads.isAdblockEnabled);\r\n    }\r\n\r\n    AdsIsStickyAvailable() {\r\n        return this.toUnity(this.gs.ads.isStickyAvailable);\r\n    }\r\n    AdsIsFullscreenAvailable() {\r\n        return this.toUnity(this.gs.ads.isFullscreenAvailable);\r\n    }\r\n    AdsIsRewardedAvailable() {\r\n        return this.toUnity(this.gs.ads.isRewardedAvailable);\r\n    }\r\n    AdsIsPreloaderAvailable() {\r\n        return this.toUnity(this.gs.ads.isPreloaderAvailable);\r\n    }\r\n\r\n\r\n    AdsIsStickyPlaying() {\r\n        return this.toUnity(this.gs.ads.isStickyPlaying);\r\n    }\r\n    AdsIsFullscreenPlaying() {\r\n        return this.toUnity(this.gs.ads.isFullscreenPlaying);\r\n    }\r\n    AdsIsRewardedPlaying() {\r\n        return this.toUnity(this.gs.ads.isRewardedPlaying);\r\n    }\r\n    AdsIsPreloaderPlaying() {\r\n        return this.toUnity(this.gs.ads.isPreloaderPlaying);\r\n    }\r\n\r\n\r\n    AnalyticsHit(url) {\r\n        return this.gs.analytics.hit(url);\r\n    }\r\n    AnalyticsGoal(event, value) {\r\n        return this.gs.analytics.goal(event, value);\r\n    }\r\n    SocialsShare(text, url, image) {\r\n        return this.gs.socials.share({ text, url, image });\r\n    }\r\n    SocialsPost(text, url, image) {\r\n        return this.gs.socials.post({ text, url, image });\r\n    }\r\n    SocialsInvite(text, url, image) {\r\n        return this.gs.socials.invite({ text, url, image });\r\n    }\r\n    SocialsJoinCommunity() {\r\n        return this.gs.socials.joinCommunity();\r\n    }\r\n    SocialsCommunityLink() {\r\n        return this.toUnity(this.gs.socials.communityLink);\r\n    }\r\n\r\n\r\n    SocialsIsSupportsNativeShare() {\r\n        return this.toUnity(this.gs.socials.isSupportsNativeShare);\r\n    }\r\n    SocialsIsSupportsNativePosts() {\r\n        return this.toUnity(this.gs.socials.isSupportsNativePosts);\r\n    }\r\n    SocialsIsSupportsNativeInvite() {\r\n        return this.toUnity(this.gs.socials.isSupportsNativeInvite);\r\n    }\r\n    SocialsCanJoinCommunity() {\r\n        return this.toUnity(this.gs.socials.canJoinCommunity);\r\n    }\r\n    SocialsIsSupportsNativeCommunityJoin() {\r\n        return this.toUnity(this.gs.socials.isSupportsNativeCommunityJoin);\r\n    }\r\n\r\n    // games collections\r\n    GamesCollectionsOpen(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag || 'ANY' };\r\n        return this.gs.gamesCollections.open(query);\r\n    }\r\n    GamesCollectionsFetch(idOrTag) {\r\n        const id = parseInt(idOrTag, 10) || 0;\r\n        const query = id > 0 ? { id } : { tag: idOrTag };\r\n        return this.gs.gamesCollections\r\n            .fetch(query)\r\n            .then((result) => {\r\n                this.lastGamesCollectionIdOrTag = idOrTag;\r\n                this.gamesCollection = result;\r\n\r\n                this.trigger('CallGamesCollectionsFetchTag', idOrTag);\r\n                this.trigger('CallGamesCollectionsFetch', JSON.stringify(result));\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.warn(err);\r\n                this.lastGamesCollectionIdOrTag = idOrTag;\r\n                this.gamesCollectionFetchError = (err && err.message) || '';\r\n                this.trigger('CallGamesCollectionsFetchError');\r\n            });\r\n    }\r\n\r\n    ChangeLanguage(language) {\r\n        return this.gs.changeLanguage(language);\r\n    }\r\n    ChangeLanguageByCode(language = '') {\r\n        return this.gs.changeLanguage(language.toLowerCase());\r\n    }\r\n    ChangeAvatarGenerator(generator) {\r\n        return this.gs.changeAvatarGenerator(generator);\r\n    }\r\n    LoadOverlay() {\r\n        return this.gs.loadOverlay();\r\n    }\r\n}\r\n\r\nwindow.GameScoreUnity = GameScoreUnity;\r\n","import GameScoreUnity from './GameScoreUnity'\r\n\r\nwindow.GameScoreUnity = GameScoreUnity;\r\n"],"names":["GameScoreUnity","constructor","gs","unity","this","document","addEventListener","window","focus","player","ready","then","trigger","on","success","JSON","stringify","fields","map","field","defaultValue","default","leaderboard","achievements","gamesCollections","fullscreen","ads","lastRewardedTag","socials","lang","ag","eventName","params","SendMessage","toUnity","value","String","Language","language","AvatarGenerator","avatarGenerator","PlatformType","platform","type","PlatformHasIntegratedAuth","hasIntegratedAuth","PlatformIsExternalLinksAllowed","isExternalLinksAllowed","AppTitle","app","title","AppDescription","description","AppImage","image","AppUrl","url","PlayerGetID","id","PlayerGetScore","score","PlayerSetScore","Number","PlayerAddScore","PlayerGetName","name","PlayerSetName","PlayerGetAvatar","avatar","PlayerSetAvatar","src","PlayerGet","key","get","PlayerSet","set","PlayerAdd","add","PlayerHas","has","PlayerSetFlag","Boolean","PlayerToggle","toggle","PlayerGetFieldName","getFieldName","PlayerGetFieldVariantName","getFieldVariantName","PlayerGetFieldVariantAt","index","variant","getField","variants","PlayerGetFieldVariantIndex","findIndex","v","PlayerReset","reset","PlayerRemove","remove","PlayerSync","override","sync","PlayerLoad","load","PlayerLogin","login","PlayerFetchFields","fetchFields","PlayerIsLoggedIn","isLoggedIn","PlayerHasAnyCredentials","hasAnyCredentials","PlayerIsStub","isStub","LeaderboardOpen","orderBy","order","limit","withMe","includeFields","displayFields","open","split","o","trim","filter","f","catch","console","warn","LeaderboardFetch","tag","fetch","leaderboardInfo","lastLeaderboardTag","players","err","LeaderboardFetchPlayerRating","fetchPlayerRating","result","lastLeaderboardPlayerRatingTag","leaderboardPlayerPosition","position","AchievementsOpen","AchievementsFetch","achievementsGroups","playerAchievements","AchievementsUnlock","idOrTag","parseInt","query","unlock","isUnlockAchievementSuccess","unlockAchievementError","error","achievement","unlockedAchievementId","unlockedAchievementTag","unlockedAchievementName","unlockedAchievementDescription","unlockedAchievementIcon","icon","unlockedAchievementIconSmall","iconSmall","unlockedAchievementRare","rare","PaymentsFetchProducts","payments","fetchProducts","products","playerPurchases","PaymentsPurchase","purchase","isPurchaseProductSuccess","purchaseProductError","product","purchasedProductId","purchasedProductTag","PaymentsConsume","consume","isConsumeProductSuccess","consumeProductError","consumedProductId","consumedProductTag","PaymentsIsAvailable","isAvailable","FullscreenOpen","FullscreenClose","close","FullscreenToggle","AdsShowFullscreen","showFullscreen","AdsShowRewarded","showRewardedVideo","AdsShowPreloader","showPreloader","AdsShowSticky","showSticky","AdsCloseSticky","closeSticky","AdsRefreshSticky","refreshSticky","AdsIsAdblockEnabled","isAdblockEnabled","AdsIsStickyAvailable","isStickyAvailable","AdsIsFullscreenAvailable","isFullscreenAvailable","AdsIsRewardedAvailable","isRewardedAvailable","AdsIsPreloaderAvailable","isPreloaderAvailable","AdsIsStickyPlaying","isStickyPlaying","AdsIsFullscreenPlaying","isFullscreenPlaying","AdsIsRewardedPlaying","isRewardedPlaying","AdsIsPreloaderPlaying","isPreloaderPlaying","AnalyticsHit","analytics","hit","AnalyticsGoal","event","goal","SocialsShare","text","share","SocialsPost","post","SocialsInvite","invite","SocialsJoinCommunity","joinCommunity","SocialsCommunityLink","communityLink","SocialsIsSupportsNativeShare","isSupportsNativeShare","SocialsIsSupportsNativePosts","isSupportsNativePosts","SocialsIsSupportsNativeInvite","isSupportsNativeInvite","SocialsCanJoinCommunity","canJoinCommunity","SocialsIsSupportsNativeCommunityJoin","isSupportsNativeCommunityJoin","GamesCollectionsOpen","GamesCollectionsFetch","lastGamesCollectionIdOrTag","gamesCollection","gamesCollectionFetchError","message","ChangeLanguage","changeLanguage","ChangeLanguageByCode","toLowerCase","ChangeAvatarGenerator","generator","changeAvatarGenerator","LoadOverlay","loadOverlay"],"sourceRoot":""}